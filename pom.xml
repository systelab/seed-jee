<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

	<modelVersion>4.0.0</modelVersion>

	<groupId>com.systelab</groupId>
	<artifactId>seed</artifactId>
	<packaging>war</packaging>
	<version>1.0</version>
	<name>seed</name>

	<properties>
		<jboss.version>1.1.0.Final</jboss.version>
		<h2.version>1.4.192</h2.version>
		<owasp.version>3.0.1</owasp.version>
		<jjwt.version>0.7.0</jjwt.version>
		<swagger.version>1.5.16</swagger.version>
		<resteasy.version>3.0.18.Final</resteasy.version>
		<jersey.version>2.23.1</jersey.version>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<aspectj.version>1.8.10</aspectj.version>
		<webapp.laboratoryInformationSystemUrl>http://localhost:8080/modulab/rest</webapp.laboratoryInformationSystemUrl>

		<!--#### TEST PROPERTIES ####-->
    	<junit.jupiter.version>5.0.3</junit.jupiter.version>
    	<hamcrest.version>1.3</hamcrest.version>
        <rest-assured.version>3.0.7</rest-assured.version>
		<slf4j.version>1.7.25</slf4j.version>
    	<cargo.wildfly.port>13080</cargo.wildfly.port>

		<!-- The port to use when the debugger is enabled. -->
		<cargo.container.debug.port>8000</cargo.container.debug.port>
		<!-- The suspend setting to use when the debugger is enabled. -->
		<cargo.container.debug.suspend>n</cargo.container.debug.suspend>
		<!-- The debug arguments used to enable debugging on the forked JVM. -->
		<cargo.container.debug.jvmargs>-Xdebug -Xrunjdwp:transport=dt_socket,server=y,suspend=${cargo.container.debug.suspend},address=${cargo.container.debug.port} -Xnoagent -Djava.compiler=NONE</cargo.container.debug.jvmargs>

	</properties>

	<build>
		<finalName>seed</finalName>

		<testResources>
			<testResource>
				<directory>src/test/resources</directory>
				<filtering>true</filtering>
			</testResource>
		</testResources>

		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.7.0</version>
				<inherited>true</inherited>
				<configuration>
					<source>1.8</source>
					<target>1.8</target>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-war-plugin</artifactId>
				<version>3.0.0</version>
				<configuration>
					<failOnMissingWebXml>false</failOnMissingWebXml>
					<filteringDeploymentDescriptors>true</filteringDeploymentDescriptors>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.jacoco</groupId>
				<artifactId>jacoco-maven-plugin</artifactId>
				<version>0.7.7.201606060606</version>
				<executions>
			        <!--
			            Prepares the property pointing to the JaCoCo runtime agent which
			            is passed as VM argument when Maven the Failsafe plugin is executed.
			        -->
			        <execution>
			            <id>pre-integration-test</id>
			            <phase>pre-integration-test</phase>
			            <goals>
			                <goal>prepare-agent</goal>
			            </goals>
			            <configuration>
			                <!-- Sets the path to the file which contains the execution data. -->
			                <destFile>${project.build.directory}/coverage-reports/jacoco-it.exec</destFile>
			                <append>true</append>
                            <includes>
                            	<include>*</include>
                            </includes>
                            <excludes>
                            	<exclude>org.jboss.as.test.*</exclude>
                            </excludes>
                            <output>file</output>
			                <propertyName>jacoco.cmdline</propertyName>
			            </configuration>
			        </execution>
			        <!--
			            Ensures that the code coverage report for integration tests after
			            integration tests have been run.
			        -->
			        <execution>
			            <id>post-integration-test</id>
			            <phase>post-integration-test</phase>
			            <goals>
			                <goal>report</goal>
			            </goals>
			            <configuration>
			                <!-- Sets the path to the file which contains the execution data. -->
			                <dataFile>${project.build.directory}/coverage-reports/jacoco-it.exec</dataFile>
			                <!-- Sets the output directory for the code coverage report. -->
			                <outputDirectory>${project.reporting.outputDirectory}/jacoco-it</outputDirectory>
			            </configuration>
			        </execution>
			    </executions>
			</plugin>
			
			<plugin>
				<!-- Don't use {surefire,failsafe} 2.20 because has memory leaks -->
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>2.20.1</version>
				<configuration>
					<excludes>
						<exclude>**/*.java</exclude>
					</excludes>
					<testFailureIgnore>false</testFailureIgnore>
					<argLine>
						-javaagent:${settings.localRepository}/org/aspectj/aspectjweaver/${aspectj.version}/aspectjweaver-${aspectj.version}.jar ${jacoco.cmdline}
					</argLine>

					<systemProperties>
						<property>
							<name>junit.jupiter.extensions.autodetection.enabled</name>
							<value>true</value>
						</property>
						<property>
							<name>allure.results.directory</name>
							<value>${project.build.directory}/allure-results</value>
						</property>
					</systemProperties>
				</configuration>
				<dependencies>
					<dependency>
						<groupId>org.aspectj</groupId>
						<artifactId>aspectjweaver</artifactId>
						<version>${aspectj.version}</version>
					</dependency>
				</dependencies>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-failsafe-plugin</artifactId>
				<version>2.19.1</version>
				<configuration>
					<includes>
                        <include>com.systelab.seed.unit.*</include>
						<include>com.systelab.seed.rest.*</include>
					</includes>
					<testFailureIgnore>false</testFailureIgnore>
					<argLine>
						-javaagent:${settings.localRepository}/org/aspectj/aspectjweaver/${aspectj.version}/aspectjweaver-${aspectj.version}.jar ${jacoco.cmdline}
					</argLine>
					<systemProperties>
						<property>
							<name>junit.jupiter.extensions.autodetection.enabled</name>
							<value>true</value>
						</property>
						<property>
							<name>allure.results.directory</name>
							<value>${project.build.directory}/allure-results</value>
						</property>
					</systemProperties>
				</configuration>
				<dependencies>
					<dependency>
						<groupId>org.aspectj</groupId>
						<artifactId>aspectjweaver</artifactId>
						<version>${aspectj.version}</version>
					</dependency>
                    <dependency>
                        <groupId>org.junit.platform</groupId>
                        <artifactId>junit-platform-surefire-provider</artifactId>
                        <version>1.0.3</version>
                    </dependency>
                    <dependency>
                        <groupId>org.junit.jupiter</groupId>
                        <artifactId>junit-jupiter-engine</artifactId>
                        <version>${junit.jupiter.version}</version>
                    </dependency>
				</dependencies>
				<executions>
					<execution>
						<goals>
							<goal>integration-test</goal>
							<goal>verify</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.codehaus.cargo</groupId>
				<artifactId>cargo-maven2-plugin</artifactId>
				<version>1.6.0</version>
				<configuration>
					<container>
						<containerId>wildfly10x</containerId>
						<timeout>60000</timeout>
						<dependencies>
							<dependency>
								<groupId>com.h2database</groupId>
								<artifactId>h2</artifactId>
							</dependency>
						</dependencies>
						<systemProperties>
						    <jboss.shutdown.forceHalt>false</jboss.shutdown.forceHalt>
  					    </systemProperties>
					</container>
					<configuration>
						<properties>
							<cargo.jvmargs>${cargo.container.debug.jvmargs} ${jacoco.cmdline},includes=*,excludes=org.jboss.as.test.*,append=true,output=file</cargo.jvmargs>

							<!-- We apply a 5000 offset manually because setting cargo.port.offset
								does not seem to work -->
							<cargo.servlet.port>${cargo.wildfly.port}</cargo.servlet.port>
							<cargo.jboss.ajp.port>13009</cargo.jboss.ajp.port>
							<cargo.logging>high</cargo.logging>
							<cargo.jboss.management-http.port>13990</cargo.jboss.management-http.port>
							<cargo.datasource.datasource.h2>
								cargo.datasource.jndi=java:/SEED|
								cargo.datasource.driver=org.h2.Driver|
								cargo.datasource.url=jdbc:h2:mem:seed;create=true|
								cargo.datasource.username=sa|
								cargo.datasource.password=sa
							</cargo.datasource.datasource.h2>
						</properties>
					</configuration>
					<deployables>
						<deployable>
							<groupId>${project.groupId}</groupId>
							<artifactId>${project.artifactId}</artifactId>
							<type>war</type>
							<pingURL>http://localhost:${cargo.wildfly.port}/seed/swagger/index.html</pingURL>
						</deployable>
					</deployables>
				</configuration>
				<executions>
					<execution>
						<id>start</id>
						<phase>pre-integration-test</phase>
						<goals>
							<goal>start</goal>
						</goals>
					</execution>
					<execution>
						<id>stop</id>
						<phase>post-integration-test</phase>
						<goals>
							<goal>stop</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>

	<reporting>
		<excludeDefaults>true</excludeDefaults>
		<plugins>
			<plugin>
				<groupId>io.qameta.allure</groupId>
				<artifactId>allure-maven</artifactId>
				<version>2.9</version>
				<configuration>
					<reportVersion>2.5.0</reportVersion>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jxr-plugin</artifactId>
				<version>2.5</version>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-javadoc-plugin</artifactId>
				<version>2.10.4</version>
				<configuration>
					<failOnError>false</failOnError>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-report-plugin</artifactId>
				<version>2.19.1</version>
			</plugin>
		</plugins>
	</reporting>

	<dependencies>
		<dependency>
			<groupId>io.jsonwebtoken</groupId>
			<artifactId>jjwt</artifactId>
			<version>${jjwt.version}</version>
		</dependency>
		<dependency>
			<groupId>org.jboss.spec</groupId>
			<artifactId>jboss-javaee-7.0</artifactId>
			<scope>provided</scope>
			<type>pom</type>
			<version>${jboss.version}</version>
		</dependency>
		<dependency>
			<groupId>io.swagger</groupId>
			<artifactId>swagger-jaxrs</artifactId>
			<version>${swagger.version}</version>
		</dependency>
        <dependency>
            <groupId>com.h2database</groupId>
            <artifactId>h2</artifactId>
            <version>${h2.version}</version>
        </dependency>
        <dependency>
            <groupId>org.owasp</groupId>
            <artifactId>dependency-check-maven</artifactId>
            <version>${owasp.version}</version>
        </dependency>

        <!--#### TEST DEPENDENCIES ####-->
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-api</artifactId>
            <version>${junit.jupiter.version}</version>
            <scope>test</scope>
        </dependency>
		<dependency>
			<groupId>org.junit.vintage</groupId>
			<artifactId>junit-vintage-engine</artifactId>
			<version>4.12.0</version>
			<scope>test</scope>
		</dependency>
        <dependency>
            <groupId>org.glassfish.jersey.containers</groupId>
            <artifactId>jersey-container-servlet-core</artifactId>
            <version>${jersey.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.glassfish.jersey.media</groupId>
            <artifactId>jersey-media-moxy</artifactId>
            <version>${jersey.version}</version>
            <scope>test</scope>
        </dependency>
		<dependency>
			<groupId>io.qameta.allure</groupId>
			<artifactId>allure-maven</artifactId>
			<version>2.9</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>io.qameta.allure</groupId>
			<artifactId>allure-junit5</artifactId>
			<version>LATEST</version>
			<scope>test</scope>
		</dependency>
        <dependency>
            <groupId>io.rest-assured</groupId>
            <artifactId>rest-assured</artifactId>
            <version>${rest-assured.version}</version>
            <scope>test</scope>
        </dependency>
		<dependency>
			<groupId>io.rest-assured</groupId>
			<artifactId>json-schema-validator</artifactId>
			<version>${rest-assured.version}</version>
		</dependency>
		<dependency>
			<groupId>com.github.fge</groupId>
			<artifactId>json-schema-validator</artifactId>
			<version>2.2.6</version>
		</dependency>
		<dependency>
			<groupId>com.github.fge</groupId>
			<artifactId>json-schema-core</artifactId>
			<version>1.2.5</version>
		</dependency>
		<dependency>
			<groupId>org.hamcrest</groupId>
			<artifactId>hamcrest-all</artifactId>
			<version>${hamcrest.version}</version>
		</dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-simple</artifactId>
            <version>${slf4j.version}</version>
        </dependency>
	</dependencies>

</project>
